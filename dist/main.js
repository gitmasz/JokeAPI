(()=>{"use strict";class t{constructor({type:t,setup:e,punchline:n}){this.type=t,this.setup=e,this.punchline=n}get jokeQuestion(){return this.setup?`<h1>${this.type.charAt(0).toUpperCase()+this.type.slice(1)} joke:</h1><p>${this.setup} ðŸ¤”</p>`:"<p>No joke ðŸ¤¬</p>>"}get jokeAnswer(){return this.punchline?`<p class="content__punchline content__punchline--button" data-punchline="${this.punchline} ðŸ¤£">Reveal</p>`:"<p>No answer ðŸ˜­</p>"}toString(){return`${this.jokeQuestion} ${this.jokeAnswer}`}}(async()=>{document.body.innerHTML='<div class="fullpage-message"><div class="content fullpage-message__content">Loading joke...</div></div>';const e=await async function(){try{const e=await fetch("https://official-joke-api.appspot.com/random_joke"),n=await e.json();if(e.ok){const e=new t(n);if("programming"===e.type)return e.toString();{const t=await fetch("https://api.chucknorris.io/jokes/random");return`<h1>Chuck Norris joke:</h1><p>${(await t.json()).value}</p><p class="content__reload-button">Reload</p>`}}throw Error("Response not 200")}catch(t){return console.warn(t),[]}}();e&&(document.body.innerHTML='<div class="fullpage-message"><div class="content fullpage-message__content">'+e+"</div></div>",document.addEventListener("click",(t=>{const e=t.target;if(e.classList.contains("content__punchline--button")){const t=e.dataset.punchline;e.classList.remove("content__punchline--button"),e.innerHTML=t;const n=document.createElement("p"),o=document.createTextNode("Reload");n.classList.add("content__reload-button"),n.appendChild(o),e.parentNode.insertBefore(n,e.nextSibling)}e.classList.contains("content__reload-button")&&location.reload()})))})()})();